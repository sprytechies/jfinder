<?php

/**
 * This is the model base class for the table "user_meta".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserMeta".
 *
 * Columns in table "user_meta" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idusermeta
 * @property integer $idusers
 * @property string $meta_name
 * @property string $meta_value
 *
 */
abstract class BaseUserMeta extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_meta';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserMeta|UserMetas', $n);
	}

	public static function representingColumn() {
		return 'meta_name';
	}

	public function rules() {
		return array(
			array('idusers, meta_name', 'required'),
			array('idusers', 'numerical', 'integerOnly'=>true),
			array('meta_name', 'length', 'max'=>64),
			array('meta_value', 'length', 'max'=>2048),
			array('meta_value', 'default', 'setOnEmpty' => true, 'value' => null),
                        array('idusermeta, idusers, meta_name, meta_value', 'safe'),
			array('idusermeta, idusers, meta_name, meta_value', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
                    'idusers0'=>array(self::HAS_ONE,'Users','idusers'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idusermeta' => Yii::t('app', 'Idusermeta'),
			'idusers' => Yii::t('app', 'Idusers'),
			'meta_name' => Yii::t('app', 'Meta Name'),
			'meta_value' => Yii::t('app', 'Meta Value'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idusermeta', $this->idusermeta);
		$criteria->compare('idusers', $this->idusers);
		$criteria->compare('meta_name', $this->meta_name, true);
		$criteria->compare('meta_value', $this->meta_value, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}