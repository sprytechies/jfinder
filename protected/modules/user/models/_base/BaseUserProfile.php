<?php

/**
 * This is the model base class for the table "user_profile".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserProfile".
 *
 * Columns in table "user_profile" available as properties of the model,
 * followed by relations of table "user_profile" available as properties of the model.
 *
 * @property integer $iduser_profile
 * @property string $name
 * @property string $email
 * @property string $phone
 * @property string $country
 * @property string $state
 * @property string $city
 * @property string $address
 * @property integer $pin
 * @property string $twitter
 * @property string $websites
 * @property string $heading
 * @property string $keyskills
 * @property string $cv
 * @property string $cdate
 * @property string $mdate
 * @property integer $idusers
 * @property string $image
 *
 * @property Users $idusers0
 */
abstract class BaseUserProfile extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_profile';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserProfile|UserProfiles', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('idusers', 'required'),
			array('pin, idusers', 'numerical', 'integerOnly'=>true),
			array('name, email, twitter, websites, cv', 'length', 'max'=>128),
			array('phone', 'length', 'max'=>16),
			array('country, state, city', 'length', 'max'=>45),
			array('address, heading, keyskills', 'length', 'max'=>1028),
			array('image', 'length', 'max'=>255),
			array('cdate, mdate', 'safe'),
			array('name, email, phone, country, state, city, address, pin, twitter, websites, heading, keyskills, cv, cdate, mdate, image', 'default', 'setOnEmpty' => true, 'value' => null),
			array('iduser_profile, name, email, phone, country, state, city, address, pin, twitter, websites, heading, keyskills, cv, cdate, mdate, idusers, image', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idusers0' => array(self::BELONGS_TO, 'Users', 'idusers'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'iduser_profile' => Yii::t('app', 'Iduser Profile'),
			'name' => Yii::t('app', 'Name'),
			'email' => Yii::t('app', 'Email'),
			'phone' => Yii::t('app', 'Phone'),
			'country' => Yii::t('app', 'Country'),
			'state' => Yii::t('app', 'State'),
			'city' => Yii::t('app', 'City'),
			'address' => Yii::t('app', 'Address'),
			'pin' => Yii::t('app', 'Pin'),
			'twitter' => Yii::t('app', 'Twitter'),
			'websites' => Yii::t('app', 'Websites'),
			'heading' => Yii::t('app', 'Heading'),
			'keyskills' => Yii::t('app', 'Keyskills'),
			'cv' => Yii::t('app', 'Cv'),
			'cdate' => Yii::t('app', 'Cdate'),
			'mdate' => Yii::t('app', 'Mdate'),
			'idusers' => null,
			'image' => Yii::t('app', 'Image'),
			'idusers0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('iduser_profile', $this->iduser_profile);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('country', $this->country, true);
		$criteria->compare('state', $this->state, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('pin', $this->pin);
		$criteria->compare('twitter', $this->twitter, true);
		$criteria->compare('websites', $this->websites, true);
		$criteria->compare('heading', $this->heading, true);
		$criteria->compare('keyskills', $this->keyskills, true);
		$criteria->compare('cv', $this->cv, true);
		$criteria->compare('cdate', $this->cdate, true);
		$criteria->compare('mdate', $this->mdate, true);
		$criteria->compare('idusers', $this->idusers);
		$criteria->compare('image', $this->image, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}