<?php

/**
 * This is the model base class for the table "jobs".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Jobs".
 *
 * Columns in table "jobs" available as properties of the model,
 * followed by relations of table "jobs" available as properties of the model.
 *
 * @property integer $idjobs
 * @property string $datefrom
 * @property string $dateto
 * @property string $title
 * @property string $description
 * @property string $type
 * @property integer $amountfrom
 * @property integer $amountto
 * @property string $keywords
 * @property string $cdate
 * @property string $mdate
 * @property integer $confirmation
 * @property integer $idcompany
 * @property string $location
 *
 * @property Companies $idcompany0
 * @property JobsApplied[] $jobsApplieds
 */
abstract class BaseJobs extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'jobs';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Jobs|Jobs', $n);
	}

	public static function representingColumn() {
		return 'cdate';
	}

	public function rules() {
		return array(
                        array('title,type,keywords,description,location,datefrom,dateto,amountto,amountfrom','required'),
			array('amountfrom, amountto, confirmation, idcompany', 'numerical', 'integerOnly'=>true),
			array('title', 'length', 'max'=>512),
			array('type', 'length', 'max'=>45),
			array('location', 'length', 'max'=>255),
                    
			array('datefrom, dateto, description, keywords, cdate, mdate', 'safe'),
			//array('datefrom, dateto, title, description, type, amountfrom, amountto, keywords, cdate, mdate, confirmation, idcompany, location', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idjobs, datefrom, dateto, title, description, type, amountfrom, amountto, keywords, cdate, mdate, confirmation, idcompany, location', 'safe', 'on'=>'search'),
                        array('dateto','comp_date'),
                    array('dateto','comp_sal'),
		);
	}

	public function relations() {
		return array(
			'idcompany0' => array(self::BELONGS_TO, 'Companies', 'idcompany'),
			'jobsApplieds' => array(self::HAS_MANY, 'JobsApplied', 'idjobs'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idjobs' => Yii::t('app', 'Idjobs'),
			'datefrom' => Yii::t('app', 'Datefrom'),
			'dateto' => Yii::t('app', 'Dateto'),
			'title' => Yii::t('app', 'Title'),
			'description' => Yii::t('app', 'Description'),
			'type' => Yii::t('app', 'Type'),
			'amountfrom' => Yii::t('app', 'Amountfrom'),
			'amountto' => Yii::t('app', 'Amountto'),
			'keywords' => Yii::t('app', 'Keywords'),
			'cdate' => Yii::t('app', 'Cdate'),
			'mdate' => Yii::t('app', 'Mdate'),
			'confirmation' => Yii::t('app', 'Confirmation'),
			'idcompany' => null,
			'location' => Yii::t('app', 'Location'),
			'idcompany0' => null,
			'jobsApplieds' => null,
		);
	}
        public function comp_date(){
                        $date1=date_create($this->datefrom);
                        $date2=date_create($this->dateto);
                      $date_comp=date_diff($date1, $date2);
                       $res=$date_comp->format("%R%a");
                      if($res<1){
                       $this->addError('dateto', 'Date to shold be greater than date from');   
                      }
            
        }
        public function comp_sal(){
            if($this->amountfrom >  $this->amountto)
                {
                $this->addError('amountto', 'Salary Offeredto shold be greater than  Salary Offeredfrom');
                }
        }

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idjobs', $this->idjobs);
		$criteria->compare('datefrom', $this->datefrom, true);
		$criteria->compare('dateto', $this->dateto, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('amountfrom', $this->amountfrom);
		$criteria->compare('amountto', $this->amountto);
		$criteria->compare('keywords', $this->keywords, true);
		$criteria->compare('cdate', $this->cdate, true);
		$criteria->compare('mdate', $this->mdate, true);
		$criteria->compare('confirmation', $this->confirmation);
		$criteria->compare('idcompany', $this->idcompany);
		$criteria->compare('location', $this->location, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}