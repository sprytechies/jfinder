<?php

/**
 * This is the model base class for the table "user_projects".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserProjects".
 *
 * Columns in table "user_projects" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idprojects
 * @property string $name
 * @property string $url
 * @property string $from
 * @property string $to
 * @property string $description
 * @property string $position
 * @property string $cdate
 * @property string $mdate
 * @property integer $ongoing
 *
 */
abstract class BaseUserProjects extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_projects';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserProjects|UserProjects', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('idprojects', 'required'),
			array('idprojects, ongoing', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>45),
			array('url, position', 'length', 'max'=>128),
			array('fromtime, totime, description, cdate, mdate', 'safe'),
			array('name, url, fromtime, totime, description, position, cdate, mdate, ongoing', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idprojects, name, url, fromtime, totime, description, position, cdate, mdate, ongoing', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
                    'idusers0'=>array(self::BELONGS_TO,'Users','idusers'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idprojects' => Yii::t('app', 'Idprojects'),
			'name' => Yii::t('app', 'Name'),
			'url' => Yii::t('app', 'Url'),
			'from' => Yii::t('app', 'From'),
			'to' => Yii::t('app', 'To'),
			'description' => Yii::t('app', 'Description'),
			'position' => Yii::t('app', 'Position'),
			'cdate' => Yii::t('app', 'Cdate'),
			'mdate' => Yii::t('app', 'Mdate'),
			'ongoing' => Yii::t('app', 'Ongoing'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idprojects', $this->idprojects);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('fromtime', $this->fromtime, true);
		$criteria->compare('totime', $this->totime, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('position', $this->position, true);
		$criteria->compare('cdate', $this->cdate, true);
		$criteria->compare('mdate', $this->mdate, true);
		$criteria->compare('ongoing', $this->ongoing);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}