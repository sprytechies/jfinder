<?php

/**
 * This is the model base class for the table "job_invites".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "JobInvites".
 *
 * Columns in table "job_invites" available as properties of the model,
 * followed by relations of table "job_invites" available as properties of the model.
 *
 * @property integer $idjobinvites
 * @property integer $idjobsapplied
 * @property string $description
 * @property string $cdate
 * @property string $mdate
 * @property string $invitedon
 *
 * @property JobsApplied $idjobsapplied0
 */
abstract class BaseJobInvites extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'job_invites';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'JobInvites|JobInvites', $n);
	}

	public static function representingColumn() {
		return 'invitedon';
	}

	public function rules() {
		return array(
			array('invitedon, description', 'required'),
			array('idjobsapplied', 'numerical', 'integerOnly'=>true),
			array('description', 'length', 'max'=>1024),
			array('cdate,title, mdate, invitedon', 'safe'),
			array('description, cdate, mdate, invitedon', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idjobinvites, idjobsapplied, description, cdate, mdate, invitedon', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idjobsapplied0' => array(self::BELONGS_TO, 'JobsApplied', 'idjobsapplied'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idjobinvites' => Yii::t('app', 'Idjobinvites'),
			'idjobsapplied' => null,
			'description' => Yii::t('app', 'Description'),
			'cdate' => Yii::t('app', 'Cdate'),
			'mdate' => Yii::t('app', 'Mdate'),
			'invitedon' => Yii::t('app', 'Invitedon'),
			'idjobsapplied0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idjobinvites', $this->idjobinvites);
		$criteria->compare('idjobsapplied', $this->idjobsapplied);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('cdate', $this->cdate, true);
		$criteria->compare('mdate', $this->mdate, true);
		$criteria->compare('invitedon', $this->invitedon, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}