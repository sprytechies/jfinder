<?php

/**
 * This is the model base class for the table "interview_messaage".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InterviewMessaage".
 *
 * Columns in table "interview_messaage" available as properties of the model,
 * followed by relations of table "interview_messaage" available as properties of the model.
 *
 * @property integer $idinterview_message
 * @property integer $idinterview
 * @property integer $idusers
 * @property string $cdate
 * @property string $mdate
 * @property string $message
 *
 * @property Users $idusers0
 * @property Interviews $idinterview0
 */
abstract class BaseInterviewMessaage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'interview_messaage';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InterviewMessaage|InterviewMessaages', $n);
	}

	public static function representingColumn() {
		return 'cdate';
	}

	public function rules() {
		return array(
			array('idinterview, idusers, cdate, message', 'required'),
			array('idinterview, idusers', 'numerical', 'integerOnly'=>true),
			array('mdate', 'safe'),
			array('mdate', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idinterview_message, idinterview, idusers, cdate, mdate, message', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idusers0' => array(self::BELONGS_TO, 'Users', 'idusers'),
			'idinterview0' => array(self::BELONGS_TO, 'Interviews', 'idinterview'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idinterview_message' => Yii::t('app', 'Idinterview Message'),
			'idinterview' => null,
			'idusers' => null,
			'cdate' => Yii::t('app', 'Cdate'),
			'mdate' => Yii::t('app', 'Mdate'),
			'message' => Yii::t('app', 'Message'),
			'idusers0' => null,
			'idinterview0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idinterview_message', $this->idinterview_message);
		$criteria->compare('idinterview', $this->idinterview);
		$criteria->compare('idusers', $this->idusers);
		$criteria->compare('cdate', $this->cdate, true);
		$criteria->compare('mdate', $this->mdate, true);
		$criteria->compare('message', $this->message, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}