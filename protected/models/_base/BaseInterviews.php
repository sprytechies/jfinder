<?php

/**
 * This is the model base class for the table "interviews".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Interviews".
 *
 * Columns in table "interviews" available as properties of the model,
 * followed by relations of table "interviews" available as properties of the model.
 *
 * @property integer $idinterview
 * @property integer $idjobs
 * @property integer $idusers
 * @property string $starttime
 * @property string $endtime
 *
 * @property InterviewMessaage[] $interviewMessaages
 * @property Users $idusers0
 * @property Jobs $idjobs0
 */
abstract class BaseInterviews extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'interviews';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Interviews|Interviews', $n);
	}

	public static function representingColumn() {
		return 'starttime';
	}

	public function rules() {
		return array(
			array('idjobs, idusers, starttime', 'required'),
			array('idjobs, idusers', 'numerical', 'integerOnly'=>true),
			array('endtime', 'safe'),
			array('endtime', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idinterview, idjobs, idusers, starttime, endtime', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'interviewMessaages' => array(self::HAS_MANY, 'InterviewMessaage', 'idinterview'),
			'idusers0' => array(self::BELONGS_TO, 'Users', 'idusers'),
			'idjobs0' => array(self::BELONGS_TO, 'Jobs', 'idjobs'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idinterview' => Yii::t('app', 'Idinterview'),
			'idjobs' => null,
			'idusers' => null,
			'starttime' => Yii::t('app', 'Starttime'),
			'endtime' => Yii::t('app', 'Endtime'),
			'interviewMessaages' => null,
			'idusers0' => null,
			'idjobs0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idinterview', $this->idinterview);
		$criteria->compare('idjobs', $this->idjobs);
		$criteria->compare('idusers', $this->idusers);
		$criteria->compare('starttime', $this->starttime, true);
		$criteria->compare('endtime', $this->endtime, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}