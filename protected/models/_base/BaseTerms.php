<?php

/**
 * This is the model base class for the table "terms".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Terms".
 *
 * Columns in table "terms" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idterms
 * @property integer $name
 * @property integer $slug
 * @property integer $type
 * @property integer $parent
 *
 */
abstract class BaseTerms extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'terms';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Terms|Terms', $n);
	}

	public static function representingColumn() {
		return 'idterms';
	}

	public function rules() {
		return array(
			array('name, type', 'required'),
			array(' type, parent', 'numerical', 'integerOnly'=>true),
			array('slug, parent', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idterms, name, slug, type, parent', 'safe', 'on'=>'search'),
			array('idterms, name, slug, type, parent', 'safe', 'on'=>'searchCategory'),
                    	array('idterms, name, slug, type, parent', 'safe', 'on'=>'searchTag'),

		);
	}

	public function relations() {
		return array(
                    'idjobterms'=>array(self::HAS_MANY,'JobTerms','idterms'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idterms' => Yii::t('app', 'Idterms'),
			'name' => Yii::t('app', 'Name'),
			'slug' => Yii::t('app', 'Slug'),
			'type' => Yii::t('app', 'Type'),
			'parent' => Yii::t('app', 'Parent'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idterms', $this->idterms);
		$criteria->compare('name', $this->name);
		$criteria->compare('slug', $this->slug);
		$criteria->compare('type', $this->type);
		$criteria->compare('parent', $this->parent);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}